# Generated by Django 4.2.1 on 2023-07-21 13:10

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import market.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('username', models.CharField(max_length=20, unique=True, verbose_name='Username')),
                ('is_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Название категории')),
                ('slug', models.SlugField(max_length=128)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/', verbose_name='Фото категории')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Models',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Имя модели')),
                ('description', models.TextField(blank=True, max_length=2000, null=True, verbose_name='Описание модели')),
                ('price', models.IntegerField(blank=True, null=True, verbose_name='Цена модели')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Время создания модели')),
                ('time_update', models.DateTimeField(auto_now=True, verbose_name='Время последнего изменения модели')),
                ('on_sale', models.BooleanField(default=True, verbose_name='В продаже')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор модели')),
            ],
            options={
                'verbose_name': 'Модель',
                'verbose_name_plural': 'Модели',
            },
        ),
        migrations.CreateModel(
            name='Promotions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_price', models.IntegerField(verbose_name='Новая цена')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активация акции')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='market.models', verbose_name='Модель')),
            ],
            options={
                'verbose_name': 'Акция',
                'verbose_name_plural': 'Акции',
            },
        ),
        migrations.CreateModel(
            name='ProfileUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=254, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=254, null=True, verbose_name='Фамилия')),
                ('decription', models.CharField(max_length=2000, null=True, verbose_name='Обо мне')),
                ('avatar', models.ImageField(blank=True, default='images/a6edc9062f9f5fb2a373efac406f0ef2.svg', null=True, upload_to='images/', verbose_name='Аватар пользователя')),
                ('date_birthday', models.DateField(null=True, verbose_name='Дата рождения')),
                ('gender', models.CharField(choices=[('M', 'Мужской'), ('F', 'Женский')], max_length=1, null=True, verbose_name='Пол')),
                ('paid_subscription', models.BooleanField(default=False)),
                ('following', models.ManyToManyField(blank=True, related_name='followers', to='market.profileuser', verbose_name='Подписки')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ModelPhotos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, storage=market.models.OverwriteStorage(), upload_to=market.models.my_models_photo_path, verbose_name='Фото модели')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='model_images', to='market.models', verbose_name='Модель')),
            ],
            options={
                'verbose_name': 'Фото обложки модели',
                'verbose_name_plural': 'Фото обложек моделей',
            },
        ),
        migrations.CreateModel(
            name='ModelLikes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('liked_on', models.DateTimeField(auto_now_add=True, verbose_name='Дата лайка')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь, который поставил лайк')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='market.models')),
            ],
            options={
                'verbose_name': 'Лайк модели',
                'verbose_name_plural': 'Лайки модели',
            },
        ),
        migrations.CreateModel(
            name='ModelFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(blank=True, null=True, upload_to='', verbose_name='Файл модели')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='market.models', verbose_name='Модель')),
            ],
            options={
                'verbose_name': 'Файл модели',
                'verbose_name_plural': 'Файлы модели',
            },
        ),
        migrations.CreateModel(
            name='CartModels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_models', to='market.cart')),
                ('models', models.ManyToManyField(related_name='models', to='market.models')),
            ],
        ),
        migrations.CreateModel(
            name='ViewCountModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP адрес')),
                ('viewed_on', models.DateTimeField(auto_now_add=True, verbose_name='Дата просмотра')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='views', to='market.models')),
            ],
            options={
                'verbose_name': 'Просмотр модели',
                'verbose_name_plural': 'Просмотры модели',
                'ordering': ('-viewed_on',),
                'indexes': [models.Index(fields=['-viewed_on'], name='market_view_viewed__61055b_idx')],
            },
        ),
    ]
